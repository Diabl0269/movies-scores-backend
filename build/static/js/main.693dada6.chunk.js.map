{"version":3,"sources":["api/users/addUser.js","api/users/deleteUser.js","api/users/getUser.js","api/users/login.js","api/users/updateUser.js","context/AuthUserProvider.js","data/dictionary.js","components/base/SideBar.js","components/base/UserButton.js","components/base/Header.js","components/base/Footer.js","components/templates/Page.js","components/pages/Account.js","components/templates/Form.js","utils/handleFormikChange.js","components/pages/AccountUpdate.js","components/forms/Login.js","components/pages/Login.js","components/utils/FormControlWithLabel.js","components/filters/form/fields/QueryFields.js","api/movies/getMovies.js","context/MoviesProvider.js","components/filters/form/SearchAndResetButtons.js","components/filters/Filters.js","api/movies/getMovieScore.js","api/movies/updateMovieScore.js","components/recordsList/ScoresPopper.js","components/recordsList/RecordsList.js","components/pages/Main.js","components/pages/NotFound.js","components/pages/Private.js","components/forms/SignUp.js","components/pages/SignUp.js","routes/routes.js","root/App.js","root/serviceWorker.js","index.js"],"names":["newUserData","a","axios","post","data","toString","includes","response","status","localStorage","token","delete","headers","Authorization","get","email","password","patch","AuthUserContext","createContext","AuthUserProvider","props","useState","user","setUser","gettingUserData","setGettingUserData","useEffect","getUser","fetchData","setTokenAndUser","userData","setItem","login","loginObj","startLogin","signUp","addUser","deleteUser","deleteUserRequest","updateUser","updateUserRequest","Provider","value","logout","navigate","removeItem","useUser","useContext","string","dictionary","useStyles","makeStyles","list","width","open","setOpen","classes","links","text","d","icon","clickHandler","toggleDrawer","event","type","key","Drawer","onClose","Slide","direction","in","mountOnEnter","unmountOnExit","className","onClick","onKeyDown","List","map","ListItem","button","ListItemIcon","ListItemText","primary","userExists","Object","keys","length","constructor","Button","color","theme","root","flexGrow","toolbar","backgroundColor","menuButton","marginRight","spacing","title","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","id","UserButton","component","src","alt","Content","SideBar","Header","Footer","userDetails","firstName","lastName","serverError","setServerError","handleClose","handleDelete","Container","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","initialValues","onSubmit","Fields","Buttons","FormGroup","setFieldValue","e","target","name","errorMessage","setErrorMessage","submitHandler","values","alert","useFormikContext","handleChange","handleFormikChange","TextField","defaultValue","onChange","UpdateButton","Form","showPassword","setShowPassword","EmailField","field","label","PasswordField","FormControl","InputLabel","OutlinedInput","endAdornment","InputAdornment","Visibility","VisibilityOff","labelWidth","Login","labelText","formControlId","Component","score","minScore","min","maxScore","max","sortBy","selectedGenres","genres","releaseYear","minReleaseYear","maxReleaseYear","console","log","scores","i","push","releaseYears","minScoresToDisplay","filter","maxScoresToDisplay","minReleaseYearsToDisplay","year","maxReleaseYearsToDisplay","FormControlWithLabel","Select","MenuItem","renderValue","selected","join","multiple","genresList","genre","Checkbox","checked","query","MoviesContext","MoviesProvider","gettingRecords","setGettingRecords","movies","setMovies","getMovies","queryDefault","getMoviesFromServer","useMovies","submitForm","resetForm","SearchAndResetButtons","updateObj","movie","averageScoreObj","average","count","averageDisplay","setAverageDisplay","countDisplay","setCountDisplay","anchorEl","setAnchorEl","handleOpen","persist","undefined","getMovieScore","currentTarget","changeHandler","updateMovieScore","Boolean","AverageScoreMessage","FirstScoreMessage","Popper","transition","TransitionProps","Fade","timeout","Paper","Box","borderColor","Rating","RecordsList","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","index","genre_ids","genresDisplay","forEach","idsGenres","ScoresPopper","Filters","messageTitle","window","innerWidth","message","mainPageText","splitedMessage","split","NotFoundMessage","href","Page","SignUp","Main","Private","Account","AccountUpdate","NotFound","router","useRoutes","routes","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.693dada6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport default async (newUserData) => {\r\n  try {\r\n    const { data } = await axios.post('/api/users', newUserData)\r\n    return { data }\r\n  } catch (e) {\r\n    let response\r\n    if (e.toString().includes('400')) response = { status: 400 }\r\n    if (e.toString().includes('409')) response = { status: 409 }\r\n    if (e.toString().includes('500')) response = { status: 500 }\r\n    return response\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async () => {\r\n  try {\r\n    const { token } = localStorage\r\n    const { status } = await axios.delete('/api/user', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n\r\n    return status === 204 ? {} : { status: 500 }\r\n  } catch (e) {\r\n    return e.toString().includes('500') ? { status: 500 } : {}\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async () => {\r\n  try {\r\n    const { token } = localStorage\r\n    const { data } = await axios.get('/api/user', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n        \r\n    return data\r\n  } catch  {\r\n    return {}\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async ({ email, password }) => {\r\n  try {\r\n    const { data } = await axios.post('/api/login', { email, password })\r\n\r\n    return { data }\r\n  } catch (e) {\r\n    let response\r\n    if (e.toString().includes('401')) response = { status: 401 }\r\n    if (e.toString().includes('500')) response = { status: 500 }\r\n    return response\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async (newUserData) => {\r\n  try {\r\n    const { token } = localStorage\r\n\r\n    const { data, status } = await axios.patch('/api/user', newUserData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n\r\n    return { data }\r\n  } catch (e) {\r\n    let response\r\n    if (e.toString().includes('400')) response = { status: 400 }\r\n    if (e.toString().includes('409')) response = { status: 409 }\r\n    if (e.toString().includes('500')) response = { status: 500 }\r\n    return response\r\n  }\r\n}\r\n","import React, { useEffect, useState, createContext, useContext } from 'react'\r\nimport addUser from '../api/users/addUser'\r\nimport deleteUserRequest from '../api/users/deleteUser'\r\nimport getUser from '../api/users/getUser'\r\nimport startLogin from '../api/users/login'\r\nimport updateUserRequest from '../api/users/updateUser'\r\nimport { HashLoader } from 'react-spinners'\r\nimport { navigate } from 'hookrouter'\r\n\r\nconst AuthUserContext = createContext()\r\nconst AuthUserProvider = (props) => {\r\n  const { token } = localStorage\r\n  const [user, setUser] = useState({})\r\n  const [gettingUserData, setGettingUserData] = useState(!!token)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (token) {\r\n        const data = await getUser()\r\n        setUser(data)\r\n        setGettingUserData(false)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [token])\r\n\r\n  const setTokenAndUser = (userData) => {\r\n    if (userData) {\r\n      const { token } = userData\r\n      localStorage.setItem('token', token)\r\n      setUser(userData)\r\n    }\r\n  }\r\n\r\n  const login = async (loginObj) => {\r\n    const { data, status } = await startLogin(loginObj)\r\n    if (data) setTokenAndUser(data)\r\n    return { data, status }\r\n  }\r\n\r\n  const signUp = async (newUserData) => {\r\n    const { data, status } = await addUser(newUserData)\r\n    return data ? setTokenAndUser(data) : status\r\n  }\r\n\r\n  const logout = () => {\r\n    navigate('/')\r\n    localStorage.removeItem('token')\r\n    setUser({})\r\n  }\r\n\r\n  const deleteUser = async () => {\r\n    const { status } = await deleteUserRequest()\r\n    setUser({})\r\n    return status\r\n  }\r\n\r\n  const updateUser = async (newUserData) => {\r\n    const { data, status } = await updateUserRequest(newUserData)\r\n    return data ? setUser(data) : status\r\n  }\r\n\r\n  return gettingUserData ? (\r\n    <HashLoader />\r\n  ) : (\r\n    <AuthUserContext.Provider\r\n      value={{ user, login, logout, signUp, deleteUser, updateUser }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst useUser = () => useContext(AuthUserContext)\r\nexport { AuthUserProvider, useUser }\r\n","import dictionary from './dictionary.json'\r\n\r\n//Can add language options to website for a multi languages website\r\nconst lng = 'eng'\r\n\r\nexport default (string) => dictionary[string][lng]\r\n","import React from 'react'\r\nimport {\r\n  Slide,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Drawer\r\n} from '@material-ui/core'\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport d from '../../data/dictionary'\r\nimport { navigate } from 'hookrouter'\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250\r\n  }\r\n})\r\n\r\nexport default ({ open, setOpen }) => {\r\n  const classes = useStyles()\r\n\r\n  const links = [\r\n    { text: d('home'), icon: <HomeIcon />, clickHandler: () => navigate('/') },\r\n    { text: d('account'), icon: <AccountCircleIcon />, clickHandler: () => navigate('/account') }\r\n  ]\r\n\r\n  const toggleDrawer = (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return\r\n    }\r\n\r\n    setOpen(!open)\r\n  }\r\n\r\n  return (\r\n    <Drawer open={open} onClose={toggleDrawer}>\r\n      <Slide direction=\"right\" in={open} mountOnEnter unmountOnExit>\r\n        <div className={classes.list} onClick={toggleDrawer} onKeyDown={toggleDrawer}>\r\n          <List>\r\n            {links.map(({ text, icon, clickHandler }) => (\r\n              <ListItem button key={text} onClick={clickHandler}>\r\n                <ListItemIcon>{icon}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n    </Drawer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\nimport d from '../../data/dictionary'\r\nimport { navigate } from 'hookrouter'\r\n\r\nexport default () => {\r\n  const { user } = useUser()\r\n  const userExists = user && Object.keys(user).length > 0 && user.constructor === Object\r\n  const { logout } = useUser()\r\n\r\n  return !userExists ? (\r\n    <Button color=\"inherit\" onClick={() => navigate('/login')}>\r\n      {d('login')}\r\n    </Button>\r\n  ) : (\r\n    <Button color=\"inherit\" onClick={logout}>\r\n      {d('logout')}\r\n    </Button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, AppBar, Toolbar, Typography, IconButton } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport UserButton from './UserButton'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  toolbar: {\r\n    backgroundColor: 'green'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}))\r\n\r\nexport default ({ setOpen, title }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setOpen(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} id=\"title\">\r\n            {title}\r\n          </Typography>\r\n          <UserButton />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Typography} from '@material-ui/core'\r\nimport d from '../../data/dictionary';\r\n\r\nexport default () => {\r\n  return (\r\n      <Typography component=\"div\" id='footerContainer'>\r\n        <img src=\"/images/TMDBLogo.svg\" alt={d('tmdbLogo')}/>\r\n        <span>{d('footerMessage')}</span>\r\n        <img src=\"/images/MuiLogo.svg\" alt={d('muiLogo')}/>\r\n      </Typography>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport SideBar from '../base/SideBar'\r\nimport Header from '../base/Header'\r\nimport Footer from '../base/Footer'\r\n\r\nexport default ({Content, title}) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      {open && <SideBar open={open} setOpen={setOpen} />}\r\n      <div id='innerPageContainer'>\r\n        <Header setOpen={setOpen} title={title} />\r\n        <Content />\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Page from '../templates/Page'\r\nimport d from '../../data/dictionary'\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@material-ui/core'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\nimport { navigate } from 'hookrouter'\r\n\r\nexport default () => {\r\n  const {\r\n    user: { userDetails: { firstName, lastName, email } = {} },\r\n    deleteUser\r\n  } = useUser()\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [serverError, setServerError] = useState(false)\r\n\r\n  const handleClose = () => {\r\n    setServerError(false)\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    const status = await deleteUser()\r\n    if (status === 500) return setServerError(true)\r\n    navigate('/')\r\n  }\r\n\r\n  const Content = () => (\r\n    <Container id=\"accountPage\">\r\n      <Typography variant=\"h4\" id=\"title\">\r\n        {d('management')}\r\n      </Typography>\r\n      <div id=\"detailsContainer\">\r\n        <Typography>{`${d('firstName')}: ${firstName}`}</Typography>\r\n        <Typography>{`${d('lastName')}: ${lastName}`}</Typography>\r\n        <Typography>{`${d('email')}: ${email}`}</Typography>\r\n      </div>\r\n      <div id=\"buttonsContainer\">\r\n        <Button id=\"updateButton\" onClick={() => navigate('/account/update')}>\r\n          {d('update')}\r\n        </Button>\r\n        <Button id=\"deleteButton\" onClick={() => setOpen(!open)}>\r\n          {d('delete')}\r\n        </Button>\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>{d('deleteUser')}</DialogTitle>\r\n          <DialogContent>\r\n            {serverError && (\r\n              <Typography id=\"deleteUserServerErrorMessageContainer\">{d('serverError')}</Typography>\r\n            )}\r\n            <DialogContentText>{d('deleteUserDialogText')}</DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>{d('cancel')}</Button>\r\n            <Button onClick={handleDelete} autoFocus>\r\n              {d('delete')}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </Container>\r\n  )\r\n\r\n  return <Page title={d('account')} Content={Content} />\r\n}\r\n","import React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport { FormGroup } from '@material-ui/core'\r\n\r\nexport default ({ initialValues = {}, onSubmit, Fields, Buttons }) => {\r\n  return (\r\n    <div id=\"formTemplate\">\r\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n        <Form>\r\n          <FormGroup id=\"formGroupTemplate\">\r\n            <Fields />\r\n            <Buttons />\r\n          </FormGroup>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","export default (setFieldValue, e) => {\r\n\r\n  const {\r\n    target: { name, value }\r\n  } = e\r\n\r\n  setFieldValue(name, value)\r\n}\r\n","import React, { useState } from 'react'\r\nimport Form from '../templates/Form'\r\nimport Page from '../templates/Page'\r\nimport d from '../../data/dictionary'\r\nimport handleFormikChange from '../../utils/handleFormikChange'\r\nimport { Container, TextField, Typography, Button } from '@material-ui/core'\r\nimport { navigate } from 'hookrouter'\r\nimport { useFormikContext } from 'formik'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\n\r\nexport default () => {\r\n  const {\r\n    user: {\r\n      userDetails: { firstName, lastName, email }\r\n    },\r\n    updateUser\r\n  } = useUser()\r\n\r\n  const [errorMessage, setErrorMessage] = useState(false)\r\n\r\n  const submitHandler = async (values) => {\r\n    const status = await updateUser(values)\r\n\r\n    if (!status) return navigate('/account')\r\n\r\n    switch (status) {\r\n      case 400:\r\n        setErrorMessage(d('detailsError'))\r\n        break\r\n      case 409:\r\n        setErrorMessage(d('emailError'))\r\n        break\r\n      case 500:\r\n        setErrorMessage(d('serverError'))\r\n        break\r\n      default:\r\n        alert('Unkown error has occurred, please try again later')\r\n    }\r\n  }\r\n\r\n  const Fields = () => {\r\n    const { setFieldValue } = useFormikContext()\r\n\r\n    const handleChange = (e) => {\r\n      handleFormikChange(setFieldValue, e)\r\n    }\r\n\r\n    return (\r\n      <Container id=\"accountFieldsContainer\">\r\n        <Typography id=\"errorMessageContainer\">{errorMessage}</Typography>\r\n        <>\r\n          <Typography>{`${d('firstName')}: `}</Typography>\r\n          <TextField name=\"firstName\" defaultValue={firstName} onChange={handleChange} />\r\n        </>\r\n        <>\r\n          <Typography>{`${d('lastName')}: `}</Typography>\r\n          <TextField name=\"lastName\" defaultValue={lastName} onChange={handleChange} />\r\n        </>\r\n        <>\r\n          <Typography>{`${d('email')}: `}</Typography>\r\n          <TextField name=\"email\" defaultValue={email} onChange={handleChange} />\r\n        </>\r\n        <>\r\n          <Typography>{`${d('password')}: `}</Typography>\r\n          <TextField name=\"password\" type=\"password\" onChange={handleChange} />\r\n        </>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  const UpdateButton = () => (\r\n    <Button type=\"submit\" id=\"updateButton\">\r\n      {d('update')}\r\n    </Button>\r\n  )\r\n\r\n  const Content = () => (\r\n    <Container id=\"accountUpdatePageContainer\">\r\n      <Form\r\n        Fields={Fields}\r\n        Buttons={UpdateButton}\r\n        onSubmit={submitHandler}\r\n        initialValues={{ firstName, lastName, email }}\r\n      />\r\n    </Container>\r\n  )\r\n\r\n  return <Page title={d('accountUpdatePageTitle')} Content={Content} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport Form from '../templates/Form'\r\nimport {\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport d from '../../data/dictionary'\r\nimport { Field } from 'formik'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\nimport { navigate } from 'hookrouter'\r\n\r\nexport default () => {\r\n  const { login } = useUser()\r\n\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState()\r\n\r\n  const submitHandler = async (values) => {\r\n    const { data, status } = await login(values)\r\n    if (!data) {\r\n      if (status === 401) return setErrorMessage(d('userDosentExist'))\r\n      if (status === 500) return setErrorMessage(d('serverError'))\r\n      return setErrorMessage(d('serverError'))\r\n    }\r\n    navigate('/')\r\n  }\r\n\r\n  const EmailField = ({ field }) => <TextField {...field} variant=\"outlined\" label={d('email')} />\r\n  const PasswordField = ({ field }) => (\r\n    <FormControl variant=\"outlined\">\r\n      <InputLabel>{d('password')}</InputLabel>\r\n      <OutlinedInput\r\n        {...field}\r\n        type={showPassword ? 'text' : 'password'}\r\n        endAdornment={\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={70}\r\n      />\r\n    </FormControl>\r\n  )\r\n\r\n  const Fields = () => (\r\n    <div id=\"fields\">\r\n      {errorMessage && <Typography id=\"errorMessage\">{errorMessage}</Typography>}\r\n      <Field component={EmailField} name=\"email\" />\r\n      <Field component={PasswordField} name=\"password\" />\r\n    </div>\r\n  )\r\n\r\n  const Buttons = () => (\r\n    <div id=\"buttonsContainer\">\r\n      <Button type=\"submit\">{d('login')}</Button>\r\n      <Button onClick={() => navigate('/sign-up')}>{d('signUp')}</Button>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <Form\r\n      Fields={Fields}\r\n      Buttons={Buttons}\r\n      onSubmit={submitHandler}\r\n      initialValues={{ email: '', password: '' }}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LoginForm from '../forms/Login'\r\nimport Page from '../templates/Page'\r\nimport d from '../../data/dictionary'\r\nimport { Container } from '@material-ui/core'\r\n\r\nexport default () => {\r\n  const Content = () => (\r\n    <Container id=\"loginPageContentContainer\">\r\n      <LoginForm />\r\n    </Container>\r\n  )\r\n\r\n  return <Page Content={Content} title={d('loginPageTitle')} />\r\n}\r\n","import React from 'react'\r\nimport { FormControl, InputLabel } from '@material-ui/core'\r\n\r\nexport default ({ labelText, formControlId = '', Component }) => (\r\n  <FormControl id={formControlId}>\r\n    <InputLabel>{labelText}</InputLabel>\r\n    <Component />\r\n  </FormControl>\r\n)\r\n","import React from 'react'\r\nimport { useFormikContext } from 'formik'\r\nimport { Select, MenuItem, Checkbox, ListItemText, Typography } from '@material-ui/core'\r\nimport handleFormikChange from '../../../../utils/handleFormikChange'\r\nimport d from '../../../../data/dictionary'\r\nimport FormControlWithLabel from '../../../utils/FormControlWithLabel'\r\nimport genresList from '../../../../data/moviesGenres.json'\r\n\r\nexport default () => {\r\n  const {\r\n    setFieldValue,\r\n    values: {\r\n      score: { min: minScore, max: maxScore },\r\n      sortBy,\r\n      genres: selectedGenres,\r\n      releaseYear: { min: minReleaseYear, max: maxReleaseYear }\r\n    },\r\n    values\r\n  } = useFormikContext()\r\n\r\n  const handleChange = (e) => {\r\n    handleFormikChange(setFieldValue, e)\r\n    console.log(values)\r\n  }\r\n\r\n  const scores = []\r\n  for (let i = 0; i < 11; i++) scores.push(i)\r\n\r\n  const releaseYears = []\r\n  for (let i = 1900; i < 2501; i++) releaseYears.push(i)\r\n\r\n  const minScoresToDisplay = scores.filter((score) => (maxScore ? score < maxScore : true))\r\n  const maxScoresToDisplay = scores.filter((score) => (minScore ? score > minScore : true))\r\n\r\n  const minReleaseYearsToDisplay = releaseYears.filter((year) =>\r\n    maxReleaseYear ? year < maxReleaseYear : true\r\n  )\r\n  const maxReleaseYearsToDisplay = releaseYears.filter((year) =>\r\n    minReleaseYear ? year > minReleaseYear : true\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        {/* Score selector */}\r\n        <>\r\n          <Typography id=\"scoreTitle\">{d('score') + ':'}</Typography>\r\n          <div id=\"scoreFieldsContainer\">\r\n            <FormControlWithLabel\r\n              labelText={d('min')}\r\n              Component={() => (\r\n                <Select name=\"score.min\" onChange={handleChange} value={minScore || 0}>\r\n                  {minScoresToDisplay.map((score) => (\r\n                    <MenuItem key={`minScore${score}`} value={score}>\r\n                      {score}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            />\r\n\r\n            <FormControlWithLabel\r\n              labelText={d('max')}\r\n              Component={() => (\r\n                <Select name=\"score.max\" onChange={handleChange} value={maxScore || 10}>\r\n                  {maxScoresToDisplay.map((score) => (\r\n                    <MenuItem key={`maxScore${score}`} value={score}>\r\n                      {score}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            />\r\n          </div>\r\n        </>\r\n      </>\r\n\r\n      <>\r\n        {/* Release Year selector */}\r\n        <>\r\n          <Typography id=\"releaseYearTitle\">{d('releaseYear') + ':'}</Typography>\r\n          <div id=\"releaseYearFieldsContainer\">\r\n            <FormControlWithLabel\r\n              labelText={d('min')}\r\n              Component={() => (\r\n                <Select\r\n                  name=\"releaseYear.min\"\r\n                  onChange={handleChange}\r\n                  value={minReleaseYear || 1900}\r\n                >\r\n                  {minReleaseYearsToDisplay.map((year) => (\r\n                    <MenuItem key={`minReleaseYear${year}`} value={year}>\r\n                      {year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            />\r\n\r\n            <FormControlWithLabel\r\n              labelText={d('max')}\r\n              Component={() => (\r\n                <Select\r\n                  name=\"releaseYear.max\"\r\n                  onChange={handleChange}\r\n                  value={maxReleaseYear || 2500}\r\n                >\r\n                  {maxReleaseYearsToDisplay.map((year) => (\r\n                    <MenuItem key={`maxReleaseYear${year}`} value={year}>\r\n                      {year}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            />\r\n          </div>\r\n        </>\r\n      </>\r\n\r\n      {/*Geners selector */}\r\n      <FormControlWithLabel\r\n        labelText={d('genres')}\r\n        formControlId=\"genreSelectorContainer\"\r\n        Component={() => (\r\n          <Select\r\n            id={'genreSelector'}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            name=\"genres\"\r\n            multiple\r\n            onChange={handleChange}\r\n            value={selectedGenres || []}\r\n          >\r\n            {genresList.map((genre) => (\r\n              <MenuItem key={genre} value={genre}>\r\n                <Checkbox checked={selectedGenres.includes(genre)} />\r\n                <ListItemText primary={genre} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        )}\r\n      />\r\n\r\n      {/*Sort by selector */}\r\n      <FormControlWithLabel\r\n        labelText={d('sortBy')}\r\n        Component={() => (\r\n          <Select name=\"sortBy\" onChange={handleChange} value={sortBy || 'desc'}>\r\n            <MenuItem value=\"-releaseYear\">{`${d('releaseYear')} ${d('descending')}`}</MenuItem>\r\n            <MenuItem value=\"releaseYear\">{`${d('releaseYear')} ${d('ascending')}`}</MenuItem>\r\n            <MenuItem value=\"-averageScoreObj.average\">{`${d('score')} ${d(\r\n              'descending'\r\n            )}`}</MenuItem>\r\n            <MenuItem value=\"averageScoreObj.average\">{`${d('score')} ${d('ascending')}`}</MenuItem>\r\n          </Select>\r\n        )}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async (query) => {\r\n  try {\r\n    const { data } = await axios.post('/api/movies', query)\r\n    return data\r\n  } catch (e) {\r\n    return\r\n  }\r\n}\r\n","import React, { useEffect, useState, useContext, createContext } from 'react'\r\nimport getMoviesFromServer from '../api/movies/getMovies'\r\nimport queryDefault from '../data/queryDefault.json'\r\n\r\nconst MoviesContext = createContext()\r\nconst MoviesProvider = (props) => {\r\n  const [gettingRecords, setGettingRecords] = useState()\r\n  const [movies, setMovies] = useState()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await getMovies(queryDefault)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  //needs to be called with a query or a type\r\n  const getMovies = async (query) => {\r\n    setGettingRecords(true)\r\n    const data = await getMoviesFromServer(query)\r\n    setMovies(data)\r\n    setGettingRecords(false)\r\n  }\r\n\r\n  return (\r\n    <MoviesContext.Provider\r\n      value={{\r\n        getMovies,\r\n        gettingRecords,\r\n        movies,\r\n        queryDefault\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst useMovies = () => useContext(MoviesContext)\r\nexport { MoviesProvider, useMovies }\r\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport d from '../../../data/dictionary'\r\nimport { useFormikContext } from 'formik'\r\n\r\nexport default () => {\r\n  const { submitForm, resetForm } = useFormikContext()\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={submitForm}> {d('search')} </Button>\r\n      <Button onClick={resetForm}> {d('reset')} </Button>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Container, Typography } from '@material-ui/core'\r\nimport Form from '../templates/Form'\r\nimport Fields from './form/fields/QueryFields'\r\nimport { useMovies } from '../../context/MoviesProvider'\r\nimport SearchAndResetButtons from './form/SearchAndResetButtons'\r\nimport d from '../../data/dictionary'\r\n\r\nexport default () => {\r\n  const { getMovies, queryDefault } = useMovies()\r\n\r\n  const submitHandler = async (values) => {\r\n    await getMovies(values)\r\n  }\r\n\r\n  return (\r\n    <Container id=\"filtersContainer\">\r\n      <Typography>{d('searchOptions')}</Typography>\r\n      <Form\r\n        Fields={Fields}\r\n        onSubmit={submitHandler}\r\n        Buttons={SearchAndResetButtons}\r\n        initialValues={queryDefault}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async (name) => {\r\n  try {\r\n    const { data } = await axios.get(`/api/movie-score/${name}`)\r\n    return data\r\n  } catch (e) {\r\n    return\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport default async (updateObj) => {\r\n  try {\r\n    const { token } = localStorage\r\n\r\n    const { data } = await axios.patch('/api/movie-score', updateObj, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    })\r\n\r\n    return data\r\n  } catch {\r\n    return \r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport StarsTwoToneIcon from '@material-ui/icons/StarsTwoTone'\r\nimport { Fade, Paper, Popper, Typography, Box } from '@material-ui/core'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport getMovieScore from '../../api/movies/getMovieScore'\r\nimport updateMovieScore from '../../api/movies/updateMovieScore'\r\nimport d from '../../data/dictionary'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\n\r\nexport default ({ movie }) => {\r\n  const { averageScoreObj: { average, count } = {}, name } = movie\r\n  const [averageDisplay, setAverageDisplay] = useState(average)\r\n  const [countDisplay, setCountDisplay] = useState(count)\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const { user } = useUser()\r\n  const userExists = Object.keys(user).length > 0\r\n\r\n  const handleOpen = async (event) => {\r\n    event.persist()\r\n    if (averageDisplay === undefined) {\r\n      const { average, count } = await getMovieScore(name)\r\n      setAverageDisplay(average)\r\n      setCountDisplay(count)\r\n    }\r\n    setAnchorEl(anchorEl ? null : event.currentTarget)\r\n  }\r\n\r\n  const changeHandler = async (e) => {\r\n    if (!userExists) return alert(d('needToLogin'))\r\n    const { average, count } = await updateMovieScore({ name, score: e.target.value })\r\n    setAverageDisplay(average)\r\n    setCountDisplay(count)\r\n  }\r\n\r\n  const open = Boolean(anchorEl)\r\n\r\n  const AverageScoreMessage = () => (\r\n    <div id=\"messageContainer\">\r\n      <Typography>{countDisplay + ' ' + d('scoreCountMessage')}</Typography>\r\n      <Typography>{d('score') + ': ' + averageDisplay}</Typography>\r\n    </div>\r\n  )\r\n\r\n  const FirstScoreMessage = () => (\r\n    <Typography id=\"messageContainer\">{d('firstScoreMessage')}</Typography>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <StarsTwoToneIcon onClick={handleOpen} />\r\n      <Popper open={open} anchorEl={anchorEl} transition>\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps} timeout={350}>\r\n            <Paper id=\"scorePoper\">\r\n              {countDisplay > 0 ? <AverageScoreMessage /> : <FirstScoreMessage />}\r\n              <Box component=\"fieldset\" borderColor=\"transparent\">\r\n                <Rating max={10} onChange={changeHandler} name={name} />\r\n              </Box>\r\n            </Paper>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HashLoader } from 'react-spinners'\r\nimport { useMovies } from '../../context/MoviesProvider'\r\nimport idsGenres from '../../data/moviesIdsGenres'\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core'\r\nimport ScoresPopper from './ScoresPopper'\r\nimport d from '../../data/dictionary'\r\n\r\nexport default () => {\r\n  const { gettingRecords, movies } = useMovies()\r\n\r\n  const RecordsList = () => (\r\n    <TableContainer id=\"recordsListContainer\">\r\n      <Table id=\"recordsList\">\r\n        <TableHead id=\"recordsListHeader\">\r\n          <TableRow>\r\n            <TableCell>{d('movies')}</TableCell>\r\n            <TableCell>{d('genres')}</TableCell>\r\n            <TableCell>{d('releaseYear')}</TableCell>\r\n            <TableCell id=\"scoresHeadCell\">{d('scores')}</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {movies &&\r\n            movies.map((movie, index) => {\r\n              const { name, averageScoreObj, genre_ids, releaseYear } = movie\r\n              let genresDisplay = ''\r\n              genre_ids.forEach((id, index) => {\r\n                if (index === genre_ids.length - 1) return (genresDisplay += `${idsGenres[id]}`)\r\n                genresDisplay += `${idsGenres[id]}/`\r\n              })\r\n\r\n              return (\r\n                <TableRow key={index}>\r\n                  <TableCell key={name}>{name}</TableCell>\r\n                  <TableCell>{genresDisplay}</TableCell>\r\n                  <TableCell>{releaseYear}</TableCell>\r\n\r\n                  <TableCell id=\"showScoresColumn\">\r\n                    <ScoresPopper averageScoreObj={averageScoreObj} movie={movie} name={name} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n\r\n  return gettingRecords ? <HashLoader /> : <RecordsList />\r\n}\r\n","import React from 'react'\r\nimport Filters from '../filters/Filters'\r\nimport MoviesRecordsList from '../recordsList/RecordsList'\r\nimport Page from '../templates/Page'\r\nimport { Container } from '@material-ui/core'\r\nimport { MoviesProvider } from '../../context/MoviesProvider'\r\nimport d from '../../data/dictionary'\r\n\r\nconst Content = () => {\r\n  return (\r\n    <Container id=\"mainPageContentContainer\">\r\n       <MoviesProvider>\r\n        <Filters />\r\n        <MoviesRecordsList />\r\n      </MoviesProvider>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default () => {\r\n  return <Page Content={Content} title={d('mainPageTitle')} />\r\n}\r\n","import React from 'react'\r\nimport Page from '../templates/Page'\r\nimport { Container, Typography } from '@material-ui/core'\r\nimport d from '../../data/dictionary'\r\nimport { A } from 'hookrouter'\r\n\r\nconst Content = () => {\r\n  const messageTitle = window.innerWidth < 600 ? 'pageNotFoundMobile' : 'pageNotFound'\r\n  const message = d(messageTitle)\r\n\r\n  const mainPageText = d('mainPage')\r\n  const splitedMessage = message.split(mainPageText)\r\n\r\n  const NotFoundMessage = () => (\r\n    <Typography id=\"textContainer\" variant=\"h6\">\r\n      {splitedMessage[0]}\r\n      <A href=\"/\">{mainPageText}</A>\r\n      {splitedMessage[1]}\r\n    </Typography>\r\n  )\r\n\r\n  return (\r\n    <Container id=\"pageNotFoundContentContainer\">\r\n      <NotFoundMessage />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default () => <Page title={d('pageNotFoundTitle')} Content={Content} />\r\n","import React from 'react'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\nimport { navigate } from 'hookrouter'\r\nimport LoginPage from './Login'\r\n\r\nexport default ({ Page }) => {\r\n  const { user } = useUser()\r\n  const userExists = user && !Object.keys(user).length !== 0 && user.constructor === Object\r\n\r\n  if (!userExists) {\r\n    navigate('/login')\r\n    return <LoginPage />\r\n  }\r\n\r\n  return <Page />\r\n}\r\n","import React, { useState } from 'react'\r\nimport Form from '../templates/Form'\r\nimport d from '../../data/dictionary'\r\nimport handleFormikChange from '../../utils/handleFormikChange'\r\nimport { Container, TextField, Typography, Button } from '@material-ui/core'\r\nimport { navigate } from 'hookrouter'\r\nimport { useFormikContext } from 'formik'\r\nimport { useUser } from '../../context/AuthUserProvider'\r\n\r\nexport default () => {\r\n  const { signUp } = useUser()\r\n\r\n  const [errorMessage, setErrorMessage] = useState(false)\r\n\r\n  const submitHandler = async (values, e) => {\r\n    const status = await signUp(values)\r\n\r\n    if (!status) return navigate('/account')\r\n\r\n    switch (status) {\r\n      case 400:\r\n        setErrorMessage(d('detailsError'))\r\n        break\r\n      case 409:\r\n        setErrorMessage(d('emailError'))\r\n        break\r\n      case 500:\r\n        setErrorMessage(d('serverError'))\r\n        break\r\n      default:\r\n        alert('Unkown error has occurred, please try again later')\r\n    }\r\n  }\r\n\r\n  const Fields = () => {\r\n    const { setFieldValue } = useFormikContext()\r\n\r\n    const handleChange = (e) => {\r\n      handleFormikChange(setFieldValue, e)\r\n    }\r\n\r\n    return (\r\n      <Container id=\"signUpFieldsContainer\">\r\n        <Typography id=\"errorMessageContainer\">{errorMessage}</Typography>\r\n        <>\r\n          <Typography>{`${d('firstName')}: `}</Typography>\r\n          <TextField name=\"firstName\" onChange={handleChange} />\r\n        </>\r\n        <>\r\n          <Typography>{`${d('lastName')}: `}</Typography>\r\n          <TextField name=\"lastName\" onChange={handleChange} />\r\n        </>\r\n        <>\r\n          <Typography>{`${d('email')}: `}</Typography>\r\n          <TextField name=\"email\" onChange={handleChange} />\r\n        </>\r\n        <>\r\n          <Typography>{`${d('password')}: `}</Typography>\r\n          <TextField name=\"password\" type=\"password\" onChange={handleChange} />\r\n        </>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  const SignUpButton = () => (\r\n    <Button type=\"submit\" id=\"signUpButton\">\r\n      {d('signUp')}\r\n    </Button>\r\n  )\r\n\r\n  return <Form Fields={Fields} Buttons={SignUpButton} onSubmit={submitHandler} />\r\n}\r\n","import React from 'react'\r\nimport SignUpForm from '../forms/SignUp';\r\nimport Page from '../templates/Page'\r\nimport d from '../../data/dictionary'\r\nimport { Container } from '@material-ui/core'\r\n\r\nexport default () => {\r\n  const Content = () => (\r\n    <Container id=\"signUpPageConetentContainer\">\r\n      <SignUpForm />\r\n    </Container>\r\n  )\r\n\r\n  return <Page Content={Content} title={d('signUpPageTitle')} />\r\n}\r\n","import React from 'react'\r\nimport Account from '../components/pages/Account'\r\nimport AccountUpdate from '../components/pages/AccountUpdate'\r\nimport Login from '../components/pages/Login'\r\nimport Main from '../components/pages/Main'\r\nimport NotFound from '../components/pages/NotFound'\r\nimport Private from '../components/pages/Private'\r\nimport SignUp from '../components/pages/SignUp'\r\n\r\nexport default {\r\n  '/': () => <Main />,\r\n  '/login': () => <Login />,\r\n  '/sign-up': () => <SignUp />,\r\n  '/account': () => <Private Page={Account} />,\r\n  '/account/update': () => <Private Page={AccountUpdate} />,\r\n  '/*': () => <NotFound />\r\n}\r\n","import React from 'react'\nimport { AuthUserProvider } from '../context/AuthUserProvider'\nimport routes from '../routes/routes'\nimport { useRoutes } from 'hookrouter'\n\nexport default () => {\n  const router = useRoutes(routes)\n\n  return <AuthUserProvider>{router}</AuthUserProvider>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './root/App';\nimport * as serviceWorker from './root/serviceWorker';\n\nimport 'normalize.css/normalize.css';\nimport './styles/index.scss';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}